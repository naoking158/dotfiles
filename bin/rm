#!/bin/bash
#
#
# ===============
# This is a modified rm program to move SRC to ~/.myTrash instead of remove it.
#
# Usage:
#     $0 [OPTION]... SRC [SRC]...
#
# Options:
#     -h, --help
#     -n, --dry-run
#     -d, --delete  ----  Use system `rm` program instead of this program
#

help () {
    awk -v CMD="$(basename $0)" 'NR > 2 {
    if (/^#/) { sub("^# ?", ""); sub("\\$0", CMD); print }
    else { exit }
    }' $0
    exit 1
}

function e_newline() {
    printf "\n"
}

function e_header() {
    printf " \033[37;1m%s\033[m\n" "$*"
}

function e_important() {
    printf " \033[31;1m%s\033[m\n" "$*"
}

function ink() {
    if [ "$#" -eq 0 -o "$#" -gt 2 ]; then
        echo "Usage: ink <color> <text>"
        echo "Colors:"
        echo "  black, white, red, green, yellow, blue, purple, cyan, gray"
        return 1
    fi

    local open="\033["
    local close="${open}0m"
    local black="0;30m"
    local red="1;31m"
    local green="1;32m"
    local yellow="1;33m"
    local blue="1;34m"
    local purple="1;35m"
    local cyan="1;36m"
    local gray="0;37m"
    local white="$close"

    local text="$1"
    local color="$close"

    if [ "$#" -eq 2 ]; then
        text="$2"
        case "$1" in
            black | red | green | yellow | blue | purple | cyan | gray | white)
            eval color="\$$1"
            ;;
        esac
    fi

    printf "${open}${color}${text}${close}"
}

set -Ceu

# Avoid split file name with white space
SAVEIFS=IFS
IFS=$(echo -en "\n\b")

[[ $# = 0 ]] && help
while (( $# > 0 )); do
    case $1 in
        -h | --help)
            help
            ;;
        -n | --dry-run)
            isDryRun=$1
            ;;
        -d | --delete)
            Delete?=$1
            ;;
        -*)
            echo
            echo "Illegal option -- '$(echo $1 | sed 's/^-*//')'." 1>&2
            help
            ;;
        *)
            if [[ -z ${ARGS:-} ]]; then
                ARGS=("$1")
            else
                ARGS=("${ARGS[@]}" "$1")
            fi
            ;;
    esac
    shift
done
[[ -z ${ARGS:-} ]] && help


TRASH="$HOME/.myTrash"
[[ ! -e $TRASH ]] && mkdir $TRASH


function move_to_trash() {
    SRC="$1"
    FNAME="$(basename $1)"
    DEST="${TRASH}/${FNAME}"

    if [[ "${isDryRun:-}" ]]; then
        ink cyan "Move"
        ink gray " $SRC"
        ink cyan " to"
        ink gray " $DEST\n"
    else
        if [[ "${Delete?:-}" ]]; then
            /bin/rm -rf "$SRC"
        else
            # If $DEST file is duplicated, older one is renamed with date.
            [[ -e "$DEST" ]] && { mv "$DEST" "$DEST-$(date +'%Y%m%d%H%M%S')"; }
            mv "$SRC" "${TRASH}/"
        fi
    fi
}

function safe_mv() {
    for i in "${ARGS[@]}"; do
        move_to_trash "$i"
    done
}


safe_mv "$ARGS"

IFS=$SAVEIFS
