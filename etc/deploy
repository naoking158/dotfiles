#!/bin/bash

set -Ceu

MANJARO_FILE=("i3" "manjaro" "mimeapps.list" "polybar")
MAC_FILE=("karabiner" "skhd" "yabai")
EXCLUDE_CONFIG_DIR=("bash/" "fish" "iterm2")
EXCLUDE_DOTFILES=(".dir_colors" ".DS_Store" ".emacs.d" ".git/" ".gitmodules" ".ssh" ".tmux/" ".Brewfile")
DOTPATH=$(cd ../ && pwd)

[[ -z ${XDG_CONFIG_HOME:-} ]] && {
    export XDG_CONFIG_HOME="${HOME}/.config";
}

function is_macos() { [[ $(uname -s) =~ Darwin ]]; }
function is_manjaro() { [[ $(uname -r) =~ .*MANJARO ]]; }

function e_newline() {
    printf "\n"
}

function e_header() {
    printf " \033[37;1m%s\033[m\n" "$*"
}

function e_done() {
    printf " \033[37;1m%s\033[m...\033[32mOK\033[m\n" "âœ” $*"
}

function ink() {
    if [ "$#" -eq 0 -o "$#" -gt 2 ]; then
        echo "Usage: ink <color> <text>"
        echo "Colors:"
        echo "  black, white, red, green, yellow, blue, purple, cyan, gray"
        return 1
    fi

    local open="\033["
    local close="${open}0m"
    local black="0;30m"
    local red="1;31m"
    local green="1;32m"
    local yellow="1;33m"
    local blue="1;34m"
    local purple="1;35m"
    local cyan="1;36m"
    local gray="0;37m"
    local white="$close"

    local text="$1"
    local color="$close"

    if [ "$#" -eq 2 ]; then
        text="$2"
        case "$1" in
            black | red | green | yellow | blue | purple | cyan | gray | white)
            eval color="\$$1"
            ;;
        esac
    fi

    printf "${open}${color}${text}${close}"
}

function is_allowed() {
    fullpath=$1
    EXCLUSION=()
    
    # Check if the file is in the exclusion list
    if [[ $fullpath =~ \.config ]]; then
        EXCLUSION=("${EXCLUDE_CONFIG_DIR[@]}")
    else
        EXCLUSION=("${EXCLUDE_DOTFILES[@]}")
    fi
    
    # Check if the file is relevant to the current OS
    if is_macos; then
        EXCLUSION=("${MANJARO_FILE[@]}" "${EXCLUSION[@]}")
    elif is_manjaro; then
        EXCLUSION=("${MAC_FILE[@]}" "${EXCLUSION[@]}")
    else
        EXCLUSION=("${MANJARO_FILE[@]}" "${MAC_FILE[@]}" "${EXCLUSION[@]}")
    fi

    [[ ! "${EXCLUSION[@]}" =~ "$(basename $fullpath)" ]]
    return $?
}

SKIP_LIST=()
CREATE_LIST=()

function _symlink_safely() {
    DEST=$(echo $1 | awk -v home=$HOME -v dothome=$DOTPATH '{ sub(dothome, home); print; }')
    if [[ -e $DEST ]] && [[ ! $(readlink $DEST) = $1 ]]; then
        SKIP_LIST+=("${1},${DEST}")
    else
        CREATE_LIST+=("${1},${DEST}")
    fi
}

function create_symlink_list() {
    if [[ -f $1 ]]; then
        _symlink_safely "$1"
    else
        for fullpath in $(find $1 -type f); do
            if [[ -f $fullpath ]]; then
                _symlink_safely "$fullpath"
            fi
        done
    fi
}

function store_symlink_for_home() {
    for i in $(ls -a $DOTPATH | grep "^\.[a-zA-Z]"); do
        fullpath="${DOTPATH}/${i}"
        if [[ -f $fullpath ]] && $(is_allowed $fullpath); then
            create_symlink_list "$fullpath"
        else
            continue
        fi
    done
}

function store_symlink_for_config() {
    for i in $(ls -a $DOTPATH/.config | grep "[a-zA-Z]"); do
        fullpath="${DOTPATH}/.config/${i}"
        if $(is_allowed $fullpath) ; then
            create_symlink_list "$fullpath"
        else
            continue
        fi
    done
}

function deploy() {
    store_symlink_for_home
    store_symlink_for_config

    if [[ -z ${CREATE_LIST:-} ]]; then
        e_header "No symlinks are created."
    else
        e_header "These symlinks are created."
        for i in "${CREATE_LIST[@]}"; do
            SRC=${i%%,*}
            DEST=${i##*,}
            ink cyan "from"; ink gray " $SRC"; ink cyan " to"; ink gray " $DEST\n";
            [[ ${1:-} = run ]] && {
                [[ -e $DEST ]] && [[ $(readlink $DEST) = $SRC ]] && { unlink $DEST; }
                
                ln -s $SRC $DEST || {
                    mkdir -p $(dirname $DEST);
                    ln -s $SRC $DEST;
                }
            }
        done
    fi
    if [[ -n ${SKIP_LIST:-} ]] && [[ ! ${1:-} = run ]]; then
        e_newline; e_header "These are skipped."
        for i in "${SKIP_LIST[@]}"; do
            SRC=${i%%,*}
            DEST=${i##*,}
            ink cyan "from"; ink gray " $SRC"; ink cyan " to"; ink gray " $DEST\n"
        done
    fi
    e_newline
    e_header "======== Summary ======== "
    e_header "  Created: ${#CREATE_LIST[@]}"
    e_header "  Skipped: ${#SKIP_LIST[@]}"
    [[ ! ${1:-} = run ]] && {
        e_newline
        ink red "This is dry run.\n"
        ink red "To create symlinks, run following command: deploy run\n"
    }
}

deploy ${1:-}

# if [[ -n ${1:-} ]] && [[ ${1} = run ]]; then
#     deploy $1
# else
#     deploy
# fi
