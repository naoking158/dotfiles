#!/bin/bash

# https://nixos.org/manual/nix/stable/installation/installing-binary.html
# https://github.com/NixOS/nixpkgs/issues/95903#issuecomment-874668988

set -Ceu

function is_macos() { [[ $(uname -s) =~ Darwin ]]; }
function is_manjaro() { [[ $(uname -r) =~ .*MANJARO ]]; }

if is_macos; then
    OPT="--daemon"
else
    OPT="--no-daemon"
fi

# is_exists returns true if executable $1 exists in $PATH
function is_exists() {
    which "$1" >/dev/null 2>&1
    return $?
}


function e_newline() {
    printf "\n"
}

function e_header() {
    printf " \033[37;1m%s\033[m\n" "$*"
}

function e_important() {
    printf " \033[31;1m%s\033[m\n" "$*"
}



function e_done() {
    printf " \033[37;1m%s\033[m...\033[32mOK\033[m\n" "✔ $*"
}

function e_arrow() {
    printf " \033[37;1m%s\033[m\n" "➜ $*"
}

function __hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        hash -r
    fi
}

function install_nix() {
    sh <(curl -L https://nixos.org/nix/install) "$OPT" && {
	__hashr
        e_newline
        e_header "Executing following command to activate Nix..."
        e_arrow 'export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels${NIX_PATH:+:$NIX_PATH}'
        e_arrow '. "\$HOME/.nix-profile/etc/profile.d/nix.sh"'
        e_important "Write above commands in Shell's profile, if necessary."

        export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels${NIX_PATH:+:$NIX_PATH}
        . "$HOME/.nix-profile/etc/profile.d/nix.sh"
    } && {
	__hashr
        e_newline
        e_arrow "Adding channels..."
        nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
        nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
        nix-channel --update
        __hashr
    } && {
	e_done "Install Nix"
    }
}

function install_home_manager() {
    # Check if home-manager config is exists
    [[ -e ~/.config/nixpkgs/home.nix ]]; has_hm_config=$?

    e_arrow "Installing home-manager..."
    nix-shell '<home-manager>' -A install
    
    __hashr
    . "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"
    
    e_done "Install home-manager"
    e_newline
    [[ has_hm_config ]] && e_important "Home-manager config is empty."
    
    e_important "Before restarting your shell, load your config as following, for example"
    e_newline
    e_arrow "home-manager switch -f ~/.config/nixpkgs/macos.nix"
}

 if is_exists "nix-shell"; then
    if [[ ${1:-} = -hm ]] || [[ ${1:-} = --home-manager ]]; then
        install_home_manager
    else
        e_important "Nix is already installed." && exit 0
    fi
else
    install_nix && install_home_manager
fi
