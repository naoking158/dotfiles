# ======================
# Setting For tmux
# ======================
# プレフィックスキー C-q
unbind C-b
set -g prefix C-q


# if-shell 'uname | grep -q Darwin' \
#      'set -g default-shell /usr/local/bin/fish'
# if-shell 'uname | grep -q Linux' \
#     'set -g default-shell /usr/bin/fish'
# set -g default-command "$SHELL"

%if #{SSH_CLIENT}
set -g default-shell /usr/bin/fish
%else
set -g default-shell /usr/local/bin/fish
%endif


# 256色
set-option -g default-terminal screen-256color
# set -g terminal-overrides 'xterm:colors=256'
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ",$TERM:Tc"

#全てのベルを無視
set -g bell-action none
# ウィンドウ番号基準値
set -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1
# ウィンドウの自動リネームoff
setw -g automatic-rename off
#ウィンドウで動作があるとステータスラインでハイライト
setw -g monitor-activity on

# コピー、選択モードのキーバインドemacs
set -g mode-keys emacs

# C-gでキャンセル
unbind C-g

# 設定ファイル再読み込み r
bind r source-file ~/.tmux.conf \; display-message "Reloaded config !!"

# Sync
bind S setw synchronize-panes on
bind E setw synchronize-panes off

# 直前のウィンドウ t
bind C-t last-window

# デタッチ d
bind d detach

# タイトル変更 A
bind A command-prompt "rename-window %%"

# ウィンドウ選択画面
bind b choose-window

# 新ウィンドウ作成
bind 5 new-window

## ペインの移動をprefixなしで行う（Shift + 矢印キー）
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# 分割していたペインそれぞれをWindowに
# bind 0 break-pane

# ペイン終了
bind k kill-pane

# ウィンドウ終了
# bind C-c kill-window

# ペイン番号表示
#bind i display-panes

# ペインの縦分割
bind 2 split-window -v
# ペインの横分割
bind 3 split-window -h

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# history size
set -g history-limit 100000
set -g mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# ステータスラインの設定 {{{
# powerline setting
set -g status on
set -g status-interval 2
set -g status-style bg=colour235
setw -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
# window list alignment
set -g status-justify "left"
set -g status-left-length 150
set -g status-right-length 150
set -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
# # }}}

# 非アクティブなペインを白っぽく (黒は232)
set -g window-style 'bg=colour235'
set -g window-active-style 'bg=colour233'

%if #{SSH_CLIENT}
# 現在のウィンドウの色
set -g window-status-current-style bg=blue,fg=white
# ペインボーダーの色を設定する
set -g pane-border-style fg=green,bg=black
# アクティブなペインを目立たせる
set -g pane-active-border-style fg=white,bg=green
%endif

# window-status を中央揃えで配置する
# set-option -g status-justify "centre"
# # status line の背景色を指定する。
# set-option -g status-fg white
# set-option -g status-bg black


bind -T copy-mode M-w send-keys -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c "
bind -T copy-mode C-w send-keys -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c "
bind C-q copy-mode
bind -n Pageup copy-mode -u

# To paste:
bind C-y run "xclip -o | tmux load-buffer - ; tmux paste-buffer"